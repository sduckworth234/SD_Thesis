<?xml version="1.0"?>
<launch>
  <!-- Intel RealSense D435i Camera Test Launch File -->
  
  <arg name="camera" default="camera" />
  <arg name="rviz" default="true" />
  <arg name="image_view" default="false" />
  
  <!-- Camera configuration -->
  <arg name="width" default="640" />
  <arg name="height" default="480" />
  <arg name="fps" default="30" />
  <arg name="enable_depth" default="true" />
  <arg name="enable_pointcloud" default="false" />
  
  <!-- Custom Camera Node -->
  <group ns="$(arg camera)">
    <node name="camera_node" pkg="sd_thesis" type="camera_node.py" output="screen">
      <param name="width" value="$(arg width)" />
      <param name="height" value="$(arg height)" />
      <param name="fps" value="$(arg fps)" />
      <param name="enable_depth" value="$(arg enable_depth)" />
      <param name="enable_pointcloud" value="$(arg enable_pointcloud)" />
    </node>
  </group>
      
      <arg name="color_width" value="$(arg color_width)" />
      <arg name="color_height" value="$(arg color_height)" />
      <arg name="enable_color" value="$(arg enable_color)" />
      
      <arg name="infra_width" value="$(arg infra_width)" />
      <arg name="infra_height" value="$(arg infra_height)" />
      <arg name="enable_infra1" value="$(arg enable_infra1)" />
      <arg name="enable_infra2" value="$(arg enable_infra2)" />
      
      <arg name="depth_fps" value="$(arg depth_fps)" />
      <arg name="color_fps" value="$(arg color_fps)" />
      
      <arg name="enable_sync" value="$(arg enable_sync)" />
      <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)" />
      <arg name="pointcloud_texture_index" value="$(arg pointcloud_texture_index)" />
    </include>
  </group>
  
  <!-- Camera Test Node -->
  <node name="camera_test" pkg="sd_thesis" type="test_camera.py" output="screen">
    <remap from="/camera/color/image_raw" to="/$(arg camera)/color/image_raw" />
    <remap from="/camera/depth/image_rect_raw" to="/$(arg camera)/depth/image_rect_raw" />
    <remap from="/camera/color/camera_info" to="/$(arg camera)/color/camera_info" />
  </node>
    
  <!-- Static transform publishers -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_base_link"
        args="0 0 0 0 0 0 $(arg camera)_link $(arg camera)_color_frame" />
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_depth_link"
        args="0 0 0 0 0 0 $(arg camera)_color_frame $(arg camera)_depth_frame" />
  
  <!-- Optional: RViz for visualization -->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sd_thesis)/config/camera_test.rviz" />
  </group>
  
  <!-- Optional: Image view for debugging -->
  <group if="$(arg image_view)">
    <node name="color_image_view" pkg="image_view" type="image_view" >
      <remap from="image" to="/$(arg camera)/color/image_raw" />
    </node>
    <node name="depth_image_view" pkg="image_view" type="image_view" >
      <remap from="image" to="/$(arg camera)/depth/image_rect_raw" />
    </node>
  </group>
  
</launch>
